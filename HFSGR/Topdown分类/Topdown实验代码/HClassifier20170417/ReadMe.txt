代码实现的是对于一个强制叶子节点分类的数据集上，在每一个非叶子节点上训练一个一对多的logistic regression模型。
目前实现的精确度在小数据集上超过了扁平分类方法，大数据集上效果略差几个百分点，多次取平均基本上相差无几。
一共有三个文件，MLNP是主程序，剩下分别是learning和prediction的程序，我都加上了注释，如果需要了解细节的话可以看一下。
对于使用来说，基本上设定好了数据集名称就可以直接跑了。我在文件夹里放了一个小的数据集，可以作为例子跑一下。
最重要的是，程序的实现最后使用的是liblinear的软件包，因此需要事先安装liblinear才可以正常使用，这个需要注意。


***********************
liblinear的安装
1. 将文件夹中的安装包加入matlab搜索路径
2. 确保电脑上已经安装Visual C++ 2010及其以上版本的编译器
3. 将matlab当前工作路径切换到liblinear文件夹中，在matlab命令行输入"mex -setup"，然后如果需要选择编译器的话选择C++，接着有选项的话就写上是或者Y，这一步就结束了。
4. 再将matlab当前工作路径切换到liblinear下的matlab文件夹，在matlab命令行输入"make"，安装完成。

为了测试liblinear是否安装成功，在matlab命令行输入"train"，如果显示相关命令选项的介绍，安装即成功，否则会报错。

***********************
MLNP.m：主程序
multiclassMLNP_learning.m：每个节点上多分类logistic regression分类器训练
multiclass_prediction.m：多分类的预测函数
get_children_set.m：获取当前节点的直接孩子集合，也就是只有下一层级的孩子节点。
label_modify_MLNP.m：将当前节点的孩子节点的所有字节点的标签转换为孩子节点，以便于当前节点的分类任务。
			e.g.current_node=8,他的孩子节点是children_node=5,6,7，所有5，6，7号节点的子节点的标签都会被转换为5，6，7，这样8号节点分类器需要处理的类别就说5，6，7三类了。

